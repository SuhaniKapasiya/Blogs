{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sk776\\\\Desktop\\\\dev\\\\projects\\\\task\\\\Blogs\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport default function AppContextProvider({\n  children\n}) {\n  _s();\n  const [loading, setloading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  async function fetchBlogPosts(p) {\n    setloading(true);\n    console.log(\"page is - \", p);\n    let url = `${baseUrl}?page=${p}`;\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      console.log(\"sd- \", data.page);\n      setPage(data.page);\n      setPosts(data.posts);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      console.log(\"Error in fetching data\", error);\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    }\n    setloading(false);\n  }\n  function handlePageChange(p) {\n    setPage(p);\n    console.log(\"set page is  - \", p);\n    fetchBlogPosts(p);\n  }\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setloading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    fetchBlogPosts,\n    handlePageChange\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n_s(AppContextProvider, \"c6pCLExUmvs92Dabk5oMLHeF/c4=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","baseUrl","jsxDEV","_jsxDEV","AppContext","AppContextProvider","children","_s","loading","setloading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","p","console","log","url","result","fetch","data","json","error","handlePageChange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sk776/Desktop/dev/projects/task/Blogs/src/context/AppContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { baseUrl } from \"../baseUrl\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppContextProvider({ children }) {\r\n  const [loading, setloading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(null);\r\n\r\n  async function fetchBlogPosts(p) {\r\n    setloading(true);\r\n    console.log(\"page is - \", p);\r\n    let url = `${baseUrl}?page=${p}`;\r\n\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n      console.log(\"sd- \", data.page);\r\n      setPage(data.page);\r\n      setPosts(data.posts);\r\n      setTotalPages(data.totalPages);\r\n    } catch (error) {\r\n      console.log(\"Error in fetching data\", error);\r\n      setPage(1);\r\n      setPosts([]);\r\n      setTotalPages(null);\r\n    }\r\n\r\n    setloading(false);\r\n  }\r\n\r\n  function handlePageChange(p) {\r\n    setPage(p);\r\n    console.log(\"set page is  - \", p);\r\n    fetchBlogPosts(p);\r\n  }\r\n\r\n  const value = {\r\n    posts,\r\n    setPosts,\r\n    loading,\r\n    setloading,\r\n    page,\r\n    setPage,\r\n    totalPages,\r\n    setTotalPages,\r\n    fetchBlogPosts,\r\n    handlePageChange,\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>\r\n    {children}\r\n    </AppContext.Provider>;\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAEzC,eAAe,SAASM,kBAAkBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAElD,eAAegB,cAAcA,CAACC,CAAC,EAAE;IAC/BR,UAAU,CAAC,IAAI,CAAC;IAChBS,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,CAAC,CAAC;IAC5B,IAAIG,GAAG,GAAI,GAAEnB,OAAQ,SAAQgB,CAAE,EAAC;IAEhC,IAAI;MACF,MAAMI,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC/B,MAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;MAChCN,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEI,IAAI,CAACX,IAAI,CAAC;MAC9BC,OAAO,CAACU,IAAI,CAACX,IAAI,CAAC;MAClBD,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;MACpBK,aAAa,CAACQ,IAAI,CAACT,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdP,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEM,KAAK,CAAC;MAC5CZ,OAAO,CAAC,CAAC,CAAC;MACVF,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,IAAI,CAAC;IACrB;IAEAN,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,SAASiB,gBAAgBA,CAACT,CAAC,EAAE;IAC3BJ,OAAO,CAACI,CAAC,CAAC;IACVC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,CAAC,CAAC;IACjCD,cAAc,CAACC,CAAC,CAAC;EACnB;EAEA,MAAMU,KAAK,GAAG;IACZjB,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,cAAc;IACdU;EACF,CAAC;EAED,oBAAOvB,OAAA,CAACC,UAAU,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EACtCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAC1B;AAACzB,EAAA,CAlDuBF,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}